--dbmate new create_roles_table

-- migrate:up
CREATE TABLE roles (
  role_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  role_title text NOT NULL,
  role_desc text NOT NULL
);

-- migrate:down
DROP TABLE roles;


--dbmate new create_business_table

-- migrate:up
CREATE TABLE businesses (
  business_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  business_name text NOT NULL,
  business_code text NOT NULL
);

-- migrate:down
DROP TABLE businesses;


--dbmate new create_categories_table

-- migrate:up
CREATE TABLE categories (
  category_code int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  category_name text NOT NULL,
  parent_category_code int REFERENCES categories(category_code)
);

CREATE INDEX parent_category_code_fkey ON categories (parent_category_code);

-- migrate:down
DROP INDEX parent_category_code;

DROP TABLE categories;


--dbmate new create_users_table

-- migrate:up
CREATE TABLE users (
  user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  user_role_id int REFERENCES roles(role_id) NOT NULL,
  user_business_id int REFERENCES businesses(business_id),
  username text NOT NULL,
  password text NOT NULL,
  fname text NOT NULL,
  lname text NOT NULL,
  email text NOT NULL,
  is_verified boolean NOT NULL DEFAULT false
);

CREATE INDEX user_business_id_fkey ON users (user_business_id);

CREATE INDEX user_role_id_fkey ON users (user_role_id);

-- migrate:down
DROP INDEX user_business_id_fkey;

DROP INDEX user_role_id_fkey;

DROP TABLE users;


--dbmate new create_transactions_table

-- migrate:up
CREATE TABLE transactions (
  transaction_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  transaction_user_id int REFERENCES users(user_id) NOT NULL,
  transaction_date_time timestamp DEFAULT now(),
  total_price money NOT NULL,
  tax numeric NOT NULL DEFAULT 0
);

CREATE INDEX transaction_user_id_fkey ON transactions (transaction_user_id)

-- migrate:down
DROP INDEX transaction_user_id_fkey;

DROP TABLE transactions;


--dbmate new create_transaction_history_table

-- migrate:up
CREATE TABLE transaction_history (
  transaction_id int REFERENCES transactions (transaction_id) NOT NULL
);

CREATE INDEX trans_history_transaction_id_fkey ON transaction_history (transaction_id);

-- migrate:down
DROP INDEX trans_history_transaction_id_fkey;

DROP TABLE transaction_history;


--dbmate new create_purchases_table

-- migrate:up
CREATE TABLE purchases (
  purchase_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  purchase_user_id int REFERENCES users(user_id) NOT NULL,
  purchase_date_time timestamp DEFAULT now(),
  total_cost money NOT NULL
);

CREATE INDEX purchase_user_id_fkey ON purchases (purchase_user_id)

-- migrate:down
DROP INDEX purchase_user_id_fkey;

DROP TABLE purchases;


--dbmate new create_purchase_history_table

-- migrate:up
CREATE TABLE purchase_history (
  purchase_id int REFERENCES purchases (purchase_id) NOT NULL
);

CREATE INDEX purchase_history_purchase_id_fkey ON purchase_history (purchase_id);

-- migrate:down
DROP INDEX purchase_history_purchase_id_fkey;

DROP TABLE purchase_history;


--dbmate new create_products_table

-- migrate:up
CREATE TABLE products (
  product_code int PRIMARY KEY NOT NULL,
  product_category_code int REFERENCES categories (category_code) NOT NULL,
  product_brand text NOT NULL,
  product_specs text NOT NULL,
  product_qty int CHECK(product_qty >= 0) NOT NULL,
  product_unit_price money NOT NULL,
  reorder_point int NOT NULL DEFAULT 0
);

CREATE INDEX product_category_code_fkey ON products (product_category_code);

-- migrate:down
DROP INDEX product_category_code_fkey;

DROP TABLE products;


--dbmate new create_transaction_products_table

-- migrate:up
CREATE TABLE transaction_products (
  transaction_id int REFERENCES transactions(transaction_id) NOT NULL,
  product_code int REFERENCES products(product_code) NOT NULL,
  bought_qty int CHECK(bought_qty >= 0) NOT NULL
);

CREATE INDEX transction_prod_transaction_id_fkey ON transaction_products (transaction_id);

CREATE INDEX transction_prod_product_code_fkey ON transaction_products (product_code);

-- migrate:down
DROP INDEX transction_prod_product_code_fkey;

DROP INDEX transction_prod_transaction_id_fkey;

DROP TABLE transaction_products;


--dbmate new create_purchase_products_table

-- migrate:up
CREATE TABLE purchase_products (
  purchase_id int REFERENCES purchases(purchase_id) NOT NULL,
  product_code int REFERENCES products(product_code) NOT NULL,
  purchase_product_qty int CHECK(purchase_product_qty >= 0) NOT NULL,
  unit_cost money NOT NULL,
  supplier_name text NOT NULL
);

CREATE INDEX purchase_prod_purchase_id_fkey ON purchase_products (purchase_id);

CREATE INDEX purchase_prod_product_code_fkey ON purchase_products (product_code);

-- migrate:down
DROP INDEX purchase_prod_product_code_fkey;

DROP INDEX purchase_prod_purchase_id_fkey;

DROP TABLE purchase_products;


--MIGRATIONS

--DEFAULT ROLES
-- migrate:up
INSERT INTO roles (role_title, role_desc)
  VALUES
  ('ADMIN', 'The boss/business owner.'),
  ('CASHIER', 'In-charge of the cash register and caters the customer''s purchases.'),
  ('STOCK EMPLOYEE', 'Monitors the stocks, processes the purchases and restocks products in your inventory.'),
  ('SALES MANAGER', 'Manage the sales and oversees the sales department of your business.'),
  ('STOCK MANAGER', 'Manage the stocks and oversees the stocks department of your business.')
;

-- migrate:down
DELETE FROM roles WHERE role_title IN ('ADMIN', 'CASHIER', 'STOCK EMPLOYEE', 'SALES MANAGER', 'STOCK MANAGER');

--SAMPLE BUSINESS
-- migrate:up
INSERT INTO businesses (business_name, business_code)
  VALUES ('BNE Computer Sales and Services', '042169Badz');

-- migrate:down
DELETE FROM businesses WHERE business_name = 'BNE Computer Sales and Services';

